plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id "org.owasp.dependencycheck" version "12.1.3"
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-config-server'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'io.rest-assured:rest-assured:5.4.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencyCheck {
	formats = ['html', 'json']
	failBuildOnCVSS = 7 // Fail the build if any dependency has a CVSS score of 7 or higher
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy(tasks.jacocoTestReport)
}


jacoco {
	toolVersion = "0.8.13"
}

tasks.jacocoTestReport {
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.outputLocation.set(layout.buildDirectory.dir("reports/jacoco/test/html"))
	}
}

tasks.jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			excludes = [
					'com.ecommerce.Application',
					'com.ecommerce.config.*',
					'com.ecommerce.dto.*'
			]
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}
		}

		rule {
			element = 'BUNDLE'
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.70 
			}
		}
	}
}

bootJar {
	archiveFileName = 'config-server.jar'
}
